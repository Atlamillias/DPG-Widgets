from ._dearpypixl.common import (
    Item,
    ItemAlias,
    ItemUUID,
    ItemCommand,
    Array,
    Literal,
    Sequence,
    Callable,
    Property,
    Any,
    Color,
    Point,
)
from ._dearpypixl.interface import (
    BasicType,
    ContainerType,
    DrawNodeType,
    DrawingType,
    FontType,
    HandlerType,
    NodeEditorType,
    NodeType,
    PlotAxisType,
    PlotType,
    PlottingType,
    RegistryType,
    RootType,
    SupportsCallback,
    SupportsSized,
    SupportsValueArray,
    TableItemType,
    TableType,
    ThemeColor,
    ThemeStyle,
    ThemeType,
    WindowType,
    mvAll,
)


class Alpha(ThemeStyle):
    __slots__: tuple[str, ...] = ()
    label: Property[str | None] = ...
    user_data: Property[Any] = ...
    use_internal_label: Property[bool] = ...
    

class ButtonTextAlign(ThemeStyle):
    __slots__: tuple[str, ...] = ()
    label: Property[str | None] = ...
    user_data: Property[Any] = ...
    use_internal_label: Property[bool] = ...
    

class CellPadding(ThemeStyle):
    __slots__: tuple[str, ...] = ()
    label: Property[str | None] = ...
    user_data: Property[Any] = ...
    use_internal_label: Property[bool] = ...
    

class ChildBorderSize(ThemeStyle):
    __slots__: tuple[str, ...] = ()
    label: Property[str | None] = ...
    user_data: Property[Any] = ...
    use_internal_label: Property[bool] = ...
    

class ChildRounding(ThemeStyle):
    __slots__: tuple[str, ...] = ()
    label: Property[str | None] = ...
    user_data: Property[Any] = ...
    use_internal_label: Property[bool] = ...
    

class FrameBorderSize(ThemeStyle):
    __slots__: tuple[str, ...] = ()
    label: Property[str | None] = ...
    user_data: Property[Any] = ...
    use_internal_label: Property[bool] = ...
    

class FramePadding(ThemeStyle):
    __slots__: tuple[str, ...] = ()
    label: Property[str | None] = ...
    user_data: Property[Any] = ...
    use_internal_label: Property[bool] = ...
    

class FrameRounding(ThemeStyle):
    __slots__: tuple[str, ...] = ()
    label: Property[str | None] = ...
    user_data: Property[Any] = ...
    use_internal_label: Property[bool] = ...
    

class GrabMinSize(ThemeStyle):
    __slots__: tuple[str, ...] = ()
    label: Property[str | None] = ...
    user_data: Property[Any] = ...
    use_internal_label: Property[bool] = ...
    

class GrabRounding(ThemeStyle):
    __slots__: tuple[str, ...] = ()
    label: Property[str | None] = ...
    user_data: Property[Any] = ...
    use_internal_label: Property[bool] = ...
    

class IndentSpacing(ThemeStyle):
    __slots__: tuple[str, ...] = ()
    label: Property[str | None] = ...
    user_data: Property[Any] = ...
    use_internal_label: Property[bool] = ...
    

class ItemInnerSpacing(ThemeStyle):
    __slots__: tuple[str, ...] = ()
    label: Property[str | None] = ...
    user_data: Property[Any] = ...
    use_internal_label: Property[bool] = ...
    

class ItemSpacing(ThemeStyle):
    __slots__: tuple[str, ...] = ()
    label: Property[str | None] = ...
    user_data: Property[Any] = ...
    use_internal_label: Property[bool] = ...
    

class PopupBorderSize(ThemeStyle):
    __slots__: tuple[str, ...] = ()
    label: Property[str | None] = ...
    user_data: Property[Any] = ...
    use_internal_label: Property[bool] = ...
    

class PopupRounding(ThemeStyle):
    __slots__: tuple[str, ...] = ()
    label: Property[str | None] = ...
    user_data: Property[Any] = ...
    use_internal_label: Property[bool] = ...
    

class ScrollbarRounding(ThemeStyle):
    __slots__: tuple[str, ...] = ()
    label: Property[str | None] = ...
    user_data: Property[Any] = ...
    use_internal_label: Property[bool] = ...
    

class ScrollbarSize(ThemeStyle):
    __slots__: tuple[str, ...] = ()
    label: Property[str | None] = ...
    user_data: Property[Any] = ...
    use_internal_label: Property[bool] = ...
    

class SelectableTextAlign(ThemeStyle):
    __slots__: tuple[str, ...] = ()
    label: Property[str | None] = ...
    user_data: Property[Any] = ...
    use_internal_label: Property[bool] = ...
    

class TabRounding(ThemeStyle):
    __slots__: tuple[str, ...] = ()
    label: Property[str | None] = ...
    user_data: Property[Any] = ...
    use_internal_label: Property[bool] = ...
    

class WindowBorderSize(ThemeStyle):
    __slots__: tuple[str, ...] = ()
    label: Property[str | None] = ...
    user_data: Property[Any] = ...
    use_internal_label: Property[bool] = ...
    

class WindowMinSize(ThemeStyle):
    __slots__: tuple[str, ...] = ()
    label: Property[str | None] = ...
    user_data: Property[Any] = ...
    use_internal_label: Property[bool] = ...
    

class WindowPadding(ThemeStyle):
    __slots__: tuple[str, ...] = ()
    label: Property[str | None] = ...
    user_data: Property[Any] = ...
    use_internal_label: Property[bool] = ...
    

class WindowRounding(ThemeStyle):
    __slots__: tuple[str, ...] = ()
    label: Property[str | None] = ...
    user_data: Property[Any] = ...
    use_internal_label: Property[bool] = ...
    

class WindowTitleAlign(ThemeStyle):
    __slots__: tuple[str, ...] = ()
    label: Property[str | None] = ...
    user_data: Property[Any] = ...
    use_internal_label: Property[bool] = ...
    

class AnnotationPadding(ThemeStyle):
    __slots__: tuple[str, ...] = ()
    label: Property[str | None] = ...
    user_data: Property[Any] = ...
    use_internal_label: Property[bool] = ...
    

class DigitalBitGap(ThemeStyle):
    __slots__: tuple[str, ...] = ()
    label: Property[str | None] = ...
    user_data: Property[Any] = ...
    use_internal_label: Property[bool] = ...
    

class DigitalBitHeight(ThemeStyle):
    __slots__: tuple[str, ...] = ()
    label: Property[str | None] = ...
    user_data: Property[Any] = ...
    use_internal_label: Property[bool] = ...
    

class ErrorBarSize(ThemeStyle):
    __slots__: tuple[str, ...] = ()
    label: Property[str | None] = ...
    user_data: Property[Any] = ...
    use_internal_label: Property[bool] = ...
    

class ErrorBarWeight(ThemeStyle):
    __slots__: tuple[str, ...] = ()
    label: Property[str | None] = ...
    user_data: Property[Any] = ...
    use_internal_label: Property[bool] = ...
    

class FillAlpha(ThemeStyle):
    __slots__: tuple[str, ...] = ()
    label: Property[str | None] = ...
    user_data: Property[Any] = ...
    use_internal_label: Property[bool] = ...
    

class FitPadding(ThemeStyle):
    __slots__: tuple[str, ...] = ()
    label: Property[str | None] = ...
    user_data: Property[Any] = ...
    use_internal_label: Property[bool] = ...
    

class LabelPadding(ThemeStyle):
    __slots__: tuple[str, ...] = ()
    label: Property[str | None] = ...
    user_data: Property[Any] = ...
    use_internal_label: Property[bool] = ...
    

class LegendInnerPadding(ThemeStyle):
    __slots__: tuple[str, ...] = ()
    label: Property[str | None] = ...
    user_data: Property[Any] = ...
    use_internal_label: Property[bool] = ...
    

class LegendPadding(ThemeStyle):
    __slots__: tuple[str, ...] = ()
    label: Property[str | None] = ...
    user_data: Property[Any] = ...
    use_internal_label: Property[bool] = ...
    

class LegendSpacing(ThemeStyle):
    __slots__: tuple[str, ...] = ()
    label: Property[str | None] = ...
    user_data: Property[Any] = ...
    use_internal_label: Property[bool] = ...
    

class LineWeight(ThemeStyle):
    __slots__: tuple[str, ...] = ()
    label: Property[str | None] = ...
    user_data: Property[Any] = ...
    use_internal_label: Property[bool] = ...
    

class MajorGridSize(ThemeStyle):
    __slots__: tuple[str, ...] = ()
    label: Property[str | None] = ...
    user_data: Property[Any] = ...
    use_internal_label: Property[bool] = ...
    

class MajorTickLen(ThemeStyle):
    __slots__: tuple[str, ...] = ()
    label: Property[str | None] = ...
    user_data: Property[Any] = ...
    use_internal_label: Property[bool] = ...
    

class MajorTickSize(ThemeStyle):
    __slots__: tuple[str, ...] = ()
    label: Property[str | None] = ...
    user_data: Property[Any] = ...
    use_internal_label: Property[bool] = ...
    

class Marker(ThemeStyle):
    __slots__: tuple[str, ...] = ()
    label: Property[str | None] = ...
    user_data: Property[Any] = ...
    use_internal_label: Property[bool] = ...
    

class MarkerSize(ThemeStyle):
    __slots__: tuple[str, ...] = ()
    label: Property[str | None] = ...
    user_data: Property[Any] = ...
    use_internal_label: Property[bool] = ...
    

class MarkerWeight(ThemeStyle):
    __slots__: tuple[str, ...] = ()
    label: Property[str | None] = ...
    user_data: Property[Any] = ...
    use_internal_label: Property[bool] = ...
    

class MinorAlpha(ThemeStyle):
    __slots__: tuple[str, ...] = ()
    label: Property[str | None] = ...
    user_data: Property[Any] = ...
    use_internal_label: Property[bool] = ...
    

class MinorGridSize(ThemeStyle):
    __slots__: tuple[str, ...] = ()
    label: Property[str | None] = ...
    user_data: Property[Any] = ...
    use_internal_label: Property[bool] = ...
    

class MinorTickLen(ThemeStyle):
    __slots__: tuple[str, ...] = ()
    label: Property[str | None] = ...
    user_data: Property[Any] = ...
    use_internal_label: Property[bool] = ...
    

class MinorTickSize(ThemeStyle):
    __slots__: tuple[str, ...] = ()
    label: Property[str | None] = ...
    user_data: Property[Any] = ...
    use_internal_label: Property[bool] = ...
    

class MousePosPadding(ThemeStyle):
    __slots__: tuple[str, ...] = ()
    label: Property[str | None] = ...
    user_data: Property[Any] = ...
    use_internal_label: Property[bool] = ...
    

class PlotBorderSize(ThemeStyle):
    __slots__: tuple[str, ...] = ()
    label: Property[str | None] = ...
    user_data: Property[Any] = ...
    use_internal_label: Property[bool] = ...
    

class PlotDefaultSize(ThemeStyle):
    __slots__: tuple[str, ...] = ()
    label: Property[str | None] = ...
    user_data: Property[Any] = ...
    use_internal_label: Property[bool] = ...
    

class PlotMinSize(ThemeStyle):
    __slots__: tuple[str, ...] = ()
    label: Property[str | None] = ...
    user_data: Property[Any] = ...
    use_internal_label: Property[bool] = ...
    

class PlotPadding(ThemeStyle):
    __slots__: tuple[str, ...] = ()
    label: Property[str | None] = ...
    user_data: Property[Any] = ...
    use_internal_label: Property[bool] = ...
    

class GridSpacing(ThemeStyle):
    __slots__: tuple[str, ...] = ()
    label: Property[str | None] = ...
    user_data: Property[Any] = ...
    use_internal_label: Property[bool] = ...
    

class LinkHoverDistance(ThemeStyle):
    __slots__: tuple[str, ...] = ()
    label: Property[str | None] = ...
    user_data: Property[Any] = ...
    use_internal_label: Property[bool] = ...
    

class LinkLineSegmentsPerLength(ThemeStyle):
    __slots__: tuple[str, ...] = ()
    label: Property[str | None] = ...
    user_data: Property[Any] = ...
    use_internal_label: Property[bool] = ...
    

class LinkThickness(ThemeStyle):
    __slots__: tuple[str, ...] = ()
    label: Property[str | None] = ...
    user_data: Property[Any] = ...
    use_internal_label: Property[bool] = ...
    

class NodeBorderThickness(ThemeStyle):
    __slots__: tuple[str, ...] = ()
    label: Property[str | None] = ...
    user_data: Property[Any] = ...
    use_internal_label: Property[bool] = ...
    

class NodeCornerRounding(ThemeStyle):
    __slots__: tuple[str, ...] = ()
    label: Property[str | None] = ...
    user_data: Property[Any] = ...
    use_internal_label: Property[bool] = ...
    

class NodePadding(ThemeStyle):
    __slots__: tuple[str, ...] = ()
    label: Property[str | None] = ...
    user_data: Property[Any] = ...
    use_internal_label: Property[bool] = ...
    

class PinCircleRadius(ThemeStyle):
    __slots__: tuple[str, ...] = ()
    label: Property[str | None] = ...
    user_data: Property[Any] = ...
    use_internal_label: Property[bool] = ...
    

class PinHoverRadius(ThemeStyle):
    __slots__: tuple[str, ...] = ()
    label: Property[str | None] = ...
    user_data: Property[Any] = ...
    use_internal_label: Property[bool] = ...
    

class PinLineThickness(ThemeStyle):
    __slots__: tuple[str, ...] = ()
    label: Property[str | None] = ...
    user_data: Property[Any] = ...
    use_internal_label: Property[bool] = ...
    

class PinOffset(ThemeStyle):
    __slots__: tuple[str, ...] = ()
    label: Property[str | None] = ...
    user_data: Property[Any] = ...
    use_internal_label: Property[bool] = ...
    

class PinQuadSideLength(ThemeStyle):
    __slots__: tuple[str, ...] = ()
    label: Property[str | None] = ...
    user_data: Property[Any] = ...
    use_internal_label: Property[bool] = ...
    

class PinTriangleSideLength(ThemeStyle):
    __slots__: tuple[str, ...] = ()
    label: Property[str | None] = ...
    user_data: Property[Any] = ...
    use_internal_label: Property[bool] = ...
    

class MiniMapOffset(ThemeStyle):
    __slots__: tuple[str, ...] = ()
    label: Property[str | None] = ...
    user_data: Property[Any] = ...
    use_internal_label: Property[bool] = ...
    

class MiniMapPadding(ThemeStyle):
    __slots__: tuple[str, ...] = ()
    label: Property[str | None] = ...
    user_data: Property[Any] = ...
    use_internal_label: Property[bool] = ...
    